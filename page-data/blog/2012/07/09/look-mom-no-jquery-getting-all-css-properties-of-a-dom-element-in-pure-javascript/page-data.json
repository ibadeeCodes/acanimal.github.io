{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/2012/07/09/look-mom-no-jquery-getting-all-css-properties-of-a-dom-element-in-pure-javascript","webpackCompilationHash":"a74464f2a2f58d5242cc","result":{"data":{"markdownRemark":{"html":"<p>Getting and setting CSS properties is a simple task. We can make it in pure JavaScript:</p>\n<pre class=\"prettyprint\">var color = domElem.style.color;    // Get color\ndomElem.style.color='blue';    // Set new color</pre>\n<p>Using jQuery it can be done with the <code>$.css()</code> method:</p>\n<pre class=\"prettyprint\">var color = $(domElem).css('color');    // Get color\n$(domElem).css('color', 'blue');    // Set new color</pre>\n<blockquote><p>The recent <a href=\"http://jquerypp.com/\">jQuery++</a> project claims to have a <code>$.styles()</code> method fastest than <code>$.css()</code> one.</p></blockquote>\n<p>The issue is: <strong>How to get all the styles of a given DOM element?</strong> Not only those applied directly with the <code>style</code> attribute but those applied using CSS classes.</p>\n<h2>The solution</h2>\n<p>Next code retrieves an object with all the style properties of a given DOM element, no matter if they were specified in CSS classes or withint the style attribute of the element.</p>\n<p>The idea behind the code is simply: we invoke the browser function that computes the whole element's style or, if it is not possible, retrieves the CSS properties from the <code>style</code> attribute.</p>\n<pre class=\"prettyprint\">    function getComputedStyle( dom ) {\n        var style;\n        var returns = {};\n        // FireFox and Chrome way\n        if(window.getComputedStyle){\n            style = window.getComputedStyle(dom, null);\n            for(var i = 0, l = style.length; i &lt; l; i++){\n                var prop = style[i];\n                var val = style.getPropertyValue(prop);\n                returns[prop] = val;\n            }\n            return returns;\n        }\n        // IE and Opera way\n        if(dom.currentStyle){\n            style = dom.currentStyle;\n            for(var prop in style){\n                returns[prop] = style[prop];\n            }\n            return returns;\n        }\n        // Style from style attribute\n        if(style = dom.style){\n            for(var prop in style){\n                if(typeof style[prop] != 'function'){\n                    returns[prop] = style[prop];\n                }\n            }\n            return returns;\n        }\n        return returns;\n    };</pre>\n<p>The code works (or must work) on any browser. For FireFox and Chrome browser the right way to get the computed style is through the window.getComputedStyle() method, while on IE and Opera browsers the dom.currentStyle property is the right place.</p>","excerpt":"Getting and setting CSS properties is a simple task. We can make it in pure JavaScript:","frontmatter":{"date":"09 July, 2012","title":"Look mom no jQuery !!! Getting all CSS properties of a DOM element in JavaScript"},"fields":{"slug":"/blog/2012/07/09/look-mom-no-jquery-getting-all-css-properties-of-a-dom-element-in-pure-javascript","readingTime":{"text":"2 min read"}}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/blog/2012/07/09/look-mom-no-jquery-getting-all-css-properties-of-a-dom-element-in-pure-javascript"}}}