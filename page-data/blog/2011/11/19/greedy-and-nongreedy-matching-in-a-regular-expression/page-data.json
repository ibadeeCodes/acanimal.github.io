{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/2011/11/19/greedy-and-nongreedy-matching-in-a-regular-expression","webpackCompilationHash":"1a07f4d853d389c5c378","result":{"data":{"markdownRemark":{"html":"<p>This questions has come to me many times so it is time to write a post that acts as a reminder.</p>\n<p>Currently I have a string like</p>\n<pre class=\"brush:perl\">ftp://user:password@server/dirA/dirB/file</pre>\n<p>and what i want is parse it to get the user, password, server and path to the file (/dirA/dirB/file). My first try was:</p>\n<pre class=\"brush:perl\">ftp://(\\S+):(\\S+)@(\\S+)(/\\S+)</pre>\n<p>but that returns me <em>server=server/dirA/dirB</em>, which isn't what I want. The idea is that the group after the @ would make a non gready match. This is achieved using the ? char. So the final and right regular expression will becomes:</p>\n<pre class=\"brush:perl\">ftp://(\\S+):(\\S+)@(\\S+?)(/\\S+)</pre>\n<p>which returns <em>server=server</em> and <em>file=/dirA/dirB/file</em>.</p>","excerpt":"This questions has come to me many times so it is time to write a post that acts as a reminder.","frontmatter":{"date":"19 November, 2011","title":"Greedy and Nongreedy Matching in a Regular Expression"},"fields":{"slug":"/blog/2011/11/19/greedy-and-nongreedy-matching-in-a-regular-expression","readingTime":{"text":"1 min read"}}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/blog/2011/11/19/greedy-and-nongreedy-matching-in-a-regular-expression"}}}