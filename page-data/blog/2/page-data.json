{"componentChunkName":"component---src-templates-blog-list-js","path":"/blog/2","webpackCompilationHash":"be865f95712747879b43","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"4be68d5e-2a6f-5253-8d7d-4365d4e53ee9","frontmatter":{"title":"Understanding the NodeJS cluster module","date":"12 August, 2017","layout":"post"},"fields":{"slug":"/blog/2017/08/12/understanding-the-nodejs-cluster-module/","readingTime":{"text":"8 min read"}},"excerpt":"NodeJS processes runs on a single process, which means it does not take advantage from multi-core systems by default. If you have an 8 core CPU and run a  NodeJS program via  it will run in a single process, wasting the rest of CPUs. Hopefully for us NodeJS offers the cluster module that contains a set of functions and properties that help us to create programs that uses all the CPUs. Not a surprise the mechanism the cluster module uses to maximize the CPU usage was via forking processes…"}},{"node":{"id":"70f319cb-4086-545a-8137-715c3fb3b5e6","frontmatter":{"title":"fetch API and Express sessions","date":"11 December, 2016","layout":"post"},"fields":{"slug":"/blog/2016/12/11/fetch-api-and-express-sessions/","readingTime":{"text":"4 min read"}},"excerpt":"TL;DR fetch API is the successor of XHR and although it's really powerful ( see What is the difference between the Fetch API and XMLHttpRequest?) you should take care of some things, like the fact you are responsible to determine if cookies must be sent to the server. This is not a tutorial on how to use the  API neither Express framework. This post is a short reminder on how to work with cookies in an Express application that uses fetch in the client side. My custom scenario Before continue I'm…"}},{"node":{"id":"8bd0d087-592b-5cc0-81e0-404f204dee84","frontmatter":{"title":"Configuring Atom editor with ESLint and the AirBnB style guide rules","date":"14 August, 2016","layout":"post"},"fields":{"slug":"/blog/2016/08/14/configuring-atom-with-eslint/","readingTime":{"text":"5 min read"}},"excerpt":"TL;DR This article demonstrate how to integrate the ESLint tool with Atom editor so our source code be automatically checked, showing linting messages in editor. In addition, ESLint will be configured based on the AirBnB code style rules. Atom & ESLint Atom editor is probably one of the most used text editors (along with SublimeText, Visual Studio Code, TextMate, ...). On his side, ESLint is an open source project, originally created by Nicholas C. Zakas, with the goal to provide a pluggable…"}},{"node":{"id":"067ba961-1368-5537-8939-73c2bba25334","frontmatter":{"title":"Introducing Universal Web Applications","date":"10 August, 2016","layout":"post"},"fields":{"slug":"/blog/2016/08/10/universal-applications/","readingTime":{"text":"8 min read"}},"excerpt":"TL;DR: This post is the first in a series of articles to talk about Universal (previously known as Isomorphic) Web Applications. The goal of the series is to describe: What an universal web application is? Why are them important? What benefits offers universal web apps? and How to create a boilerplate to start a universal app project. Note, because JavaScript ecosystem is incredible bast and, because we can create an universal web app with almost any combination of framework and libraries, we…"}},{"node":{"id":"a000a775-0048-5b18-947f-09a41f3a8b29","frontmatter":{"title":"Resilient PHP applications with Phystrix","date":"06 July, 2016","layout":"post"},"fields":{"slug":"/blog/2016/07/26/resilient-php-applications-with-phystrix/","readingTime":{"text":"6 min read"}},"excerpt":"TL;DR: This post talks about how to make our PHP applications more resilient, that is, they must be able to adapt to third party failures and recover quickly from them. You will see why configuring timeouts is not enough to protect your system and what better tools exists. We will explain briefly Hystrix concepts and introduce an alternative for PHP called Phystrix. No matter how well designed be your system, no matter the number, kind or quality of your tests. There is only once thing for sure…"}},{"node":{"id":"0fd5a582-10ac-5a35-836d-4f08f6bebbae","frontmatter":{"title":"Symfony, images and S3","date":"25 March, 2016","layout":"post"},"fields":{"slug":"/blog/2016/03/26/symfony-and-s3/","readingTime":{"text":"6 min read"}},"excerpt":"Paraphrasing the movie title Sex, lies and videotape, this post is related on how I configured my symfony project to work with images (including thumbnail generation) and store all them on Amazon S3 service. There are are libraries and bundles to work with images and also others to work with S3, but the combination of all them can be a tricky experience with not much documentation out there. In addition, there is also one more challenge to achieve and, that is, while developing I want to store…"}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"limit":6,"skip":6,"numPages":17,"currentPage":2}}}