{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/2015/01/03/readingwriting-compressed-and-not-compressed-files-in-java/","webpackCompilationHash":"be865f95712747879b43","result":{"data":{"markdownRemark":{"html":"<p>Main reason for this post is trying don't repeat yourself (<a href=\"http://en.wikipedia.org/wiki/Don%27t_repeat_yourself\">DRY</a>) because, often, I fall in the recursive need to read and write compressed and not compressed files (mainly JSON and CSV).</p>\n<p>Let's to see first how to read text files. Note I'm working with (relatively small) text files so:</p>\n<ol>\n<li>The read methods returns an String with the whole content.</li>\n<li>I'm using <code class=\"language-text\">BufferedReader</code> to read line by line.</li>\n</ol>\n<p>{% highlight java %}\nprivate String readFile(String fileName) {\nStringBuilder sb = new StringBuilder();\ntry {\nBufferedReader input = new BufferedReader(new FileReader(new File(fileName)));\ntry {\nString line = null;\nwhile ((line = input.readLine()) != null) {\nsb.append(line);\n}\n} finally {\ninput.close();\n}\n} catch (IOException ex) {\n// Handle exception\nreturn null;\n}</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">return sb.toString();</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>}\n{% endhighlight %}</p>\n<blockquote>\n<p>Note: there are more than one way to do things. In the entry <a href=\"http://stackoverflow.com/questions/4716503/best-way-to-read-a-text-file\">Best way to read a text file</a>, where you can find many different ways to read a text file depending on your JDK version and the size of the file.</p>\n</blockquote>\n<p>Similarly to write a String to a file:</p>\n<p>{% highlight java %}\nprivate void writeFile(String fileName, String value) {\ntry {\nFileWriter fw = new FileWriter(fileName);\nBufferedWriter bw = new BufferedWriter(fw);\nbw.write(value);\nbw.close();\n} catch (IOException ex) {\n// Handle exception\n}\n}\n{% endhighlight %}</p>\n<p>To read/write compressed files, that is with binary data, we need to work with streams and buffers. So to read a GZIP compressed file and obtain a String:</p>\n<p>{% highlight java %}\nprivate String readCompressedFile(String fileName) {\ntry {\nGZIPInputStream gis = new GZIPInputStream(new FileInputStream(fileName));\nByteArrayOutputStream fos = new ByteArrayOutputStream();\nbyte[] buffer = new byte[1024];\nint len;\nwhile ((len = gis.read(buffer)) != -1) {\nfos.write(buffer, 0, len);\n}\nfos.close();\ngis.close();\nreturn new String(fos.toByteArray());\n} catch (IOException ex) {\n// Handle exception\nreturn null;\n}\n}\n{% endhighlight %}</p>\n<p>and similarly to write a String to a GZip compressed file:</p>\n<p>{% highlight java %}\nprivate void writeCompressedFile(String fileName, String value) {\ntry {\nInputStream is = new ByteArrayInputStream(value.getBytes());\nGZIPOutputStream gzipOS = new GZIPOutputStream(new FileOutputStream(fileName));\nbyte[] buffer = new byte[1024];\nint len;\nwhile ((len = is.read(buffer)) != -1) {\ngzipOS.write(buffer, 0, len);\n}\ngzipOS.close();\nis.close();\n} catch (IOException ex) {\n// Handle exception\n}\n}\n{% endhighlight %}</p>\n<h2>References</h2>\n<p>Next you can find a couple of great links with Java code for various JDK versions:</p>\n<ul>\n<li><a href=\"http://www.javapractices.com/topic/TopicAction.do?Id=42\">Reading and writing text files</a></li>\n<li><a href=\"http://www.javapractices.com/topic/TopicAction.do?Id=245\">Reading and writing binary files</a></li>\n</ul>","excerpt":"Main reason for this post is trying don't repeat yourself (DRY) because, often, I fall in the recursive need to read and write compressed and not compressed…","frontmatter":{"date":"03 January, 2015","title":"Reading/writing compressed and not compressed files in Java"},"fields":{"slug":"/blog/2015/01/03/readingwriting-compressed-and-not-compressed-files-in-java/","readingTime":{"text":"3 min read"}}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/blog/2015/01/03/readingwriting-compressed-and-not-compressed-files-in-java/"}}}