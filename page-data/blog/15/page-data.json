{"componentChunkName":"component---src-templates-blog-list-js","path":"/blog/15","webpackCompilationHash":"4776e6576de27e274acc","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"dc0f4fa7-71cf-541a-8a05-54600bb1ef00","frontmatter":{"title":"Crop image on the client side with JCrop and HTML5 canvas element","date":"26 September, 2011","layout":"post"},"fields":{"slug":"/blog/2011/09/26/crop-image-on-the-client-side-with-jcrop-and-html5-canvas-element/","readingTime":{"text":"2 min read"}},"excerpt":"Suppose you are working on a nice web application where the user can upload images to, for example, a shop catalogue (mmm... that makes me think on something :p ) but wait... you don't the catalogue uses the whole image you upload instead a piece of it. So, we need to crop the image. function updatePreview(c) {\n\tif(parseInt(c.w) > 0) {\n\t\t// Show image preview\n\t\tvar imageObj = $(\"#target\")0;\n\t\tvar canvas = $(\"#preview\")0;\n\t\tvar context = canvas.getContext(\"2d\");\n\t\tcontext.drawImage(imageObj, c.x, c.y, c.w, c.h, 0, 0, canvas.width, canvas.height);\n\t}\n};"}},{"node":{"id":"c3db2cfd-0b9a-5ff8-a48f-e73d5d21f4fd","frontmatter":{"title":"A word about LESS","date":"29 August, 2011","layout":"post"},"fields":{"slug":"/blog/2011/08/29/a-word-about-less/","readingTime":{"text":"2 min read"}},"excerpt":"Woow!!! That is the word that best defines Less."}},{"node":{"id":"c17db88e-4592-5854-8cbe-4b03fa5c0308","frontmatter":{"title":"Customizing jQuery UI Dialog: hiding close button and changing opacity","date":"16 August, 2011","layout":"post"},"fields":{"slug":"/blog/2011/08/16/customizing-jquery-ui-dialog-hiding-close-button-and-changing-opacity/","readingTime":{"text":"2 min read"}},"excerpt":"Sometimes when you are programming small things are the hard things, little details becomes difficult to solve and you need to spend lot of time to solve them. This is logically :) because you spent the major part of your time thinking and designing the big or complex things, leaving in a second plane the small things and because this they became the new \"big\" things. Ok, stop talking with buggy sentences and talk about this post. Recently I was working in a web page using jQuery UI dialogs that have a couple of special requirements that takes me some time and because this I want to share here with you:"}},{"node":{"id":"95dfa619-2002-5d05-a0ff-02ae5364447c","frontmatter":{"title":"Local storage: Storing sticky notes on your machine with HTML5","date":"12 August, 2011","layout":"post"},"fields":{"slug":"/blog/2011/08/12/local-storage-storing-sticky-notes-on-your-machine-with-html5/","readingTime":{"text":"3 min read"}},"excerpt":"Every history has a beginning and for this post it starts when some time ago I saw this good post from tutorialzine.com. Really I love the tutorials at tutorialzine.com, they are great quality examples to learn."}},{"node":{"id":"c430d45e-d8fb-5050-a019-09786488ca15","frontmatter":{"title":"A geek joke","date":"29 July, 2011","layout":"post"},"fields":{"slug":"/blog/2011/07/29/a-geek-joke/","readingTime":{"text":"1 min read"}},"excerpt":"It makes me smile: A man walks into a Doctor’s and says “Doctor, I think I’m addicted to Twitter.” Doctor looks at him and says “Sorry, I don’t follow you.”"}},{"node":{"id":"0f748ce2-ca9c-5050-98df-c0bdff929ede","frontmatter":{"title":"Generating map tiles without a map server. GeoTools the GIS swissknife.","date":"23 July, 2011","layout":"post"},"fields":{"slug":"/blog/2011/07/23/generating-map-tiles-without-a-map-server-geotools-the-gis-swissknife/","readingTime":{"text":"6 min read"}},"excerpt":"Recently I was playing with latest version of GeoServer. It includes the GeoWebCache, something which can improve your server performance greatly. GeoServer solves and helps lots of problems to work and visualize geospatial data but as you know map servers lakes from scalability. // Get lightning store\nDataStore dataStore = DataStoreFinder.getDataStore(params);\nSimpleFeatureSource sfs = dataStore.getFeatureSource(\"lightnings\"); // Style for Positivos\nGraphic grP = styleFactory.createDefaultGraphic();\nMark markP = styleFactory.getCircleMark();\nmarkP.setStroke(styleFactory.createStroke(filterFactory.literal(Color.BLUE), filterFactory.literal(1)));\nmarkP.setFill(styleFactory.createFill(filterFactory.literal(Color.CYAN)));\ngrP.graphicalSymbols().clear();\ngrP.graphicalSymbols().add(markP);\ngrP.setSize(filterFactory.literal(5)); // Style for Negativos\nGraphic grN = styleFactory.createDefaultGraphic();\nMark markN = styleFactory.getCircleMark();\nmarkN.setStroke(styleFactory.createStroke(filterFactory.literal(Color.RED), filterFactory.literal(1)));\nmarkN.setFill(styleFactory.createFill(filterFactory.literal(Color.ORANGE)));\ngrN.graphicalSymbols().clear();\ngrN.graphicalSymbols().add(markN);\ngrN.setSize(filterFactory.literal(5)); Filter filterPositiveValor = ff.and(filter, CQL.toFilter(\"value >= 0\"));\nFilter filterNegativeValor = ff.and(filter, CQL.toFilter(\"value < 0\")); // Create symbols and rules to render every feature\nPointSymbolizer symPositivos = styleFactory.createPointSymbolizer(grP, null);\nPointSymbolizer symNegativos = styleFactory.createPointSymbolizer(grN, null); Rule ruleP = styleFactory.createRule();\nruleP.symbolizers().add(symPositivos);\nruleP.setFilter(filterPositiveValor);\nFeatureTypeStyle ftsP = styleFactory.createFeatureTypeStyle(new Rule[]{ruleP}); Rule ruleN = styleFactory.createRule();\nruleN.symbolizers().add(symNegativos);\nruleN.setFilter(filterNegativeValor);\nFeatureTypeStyle ftsN = styleFactory.createFeatureTypeStyle(new Rule[]{ruleN}); // Finally create out style\nStyle style = styleFactory.createStyle();\nstyle.featureTypeStyles().add(ftsP);\nstyle.featureTypeStyles().add(ftsN); }"}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"limit":6,"skip":84,"numPages":18,"currentPage":15}}}