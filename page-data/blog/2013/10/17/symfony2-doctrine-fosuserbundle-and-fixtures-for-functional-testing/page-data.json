{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/2013/10/17/symfony2-doctrine-fosuserbundle-and-fixtures-for-functional-testing/","webpackCompilationHash":"94830e9bd36aba932e6a","result":{"data":{"markdownRemark":{"html":"<p>I have an application built with Symfony2 framework which uses the Doctrine2 ORM for persistence.\nThe issue is I need to make <a href=\"http://symfony.com/doc/current/book/testing.html#functional-tests\">functional tests</a>\nallowing to purge and initialize the database with doctrine fixtures.</p></p>\n<h3>Before to start</h3>\n<p>In the project I have used the <a href=\"https://github.com/FriendsOfSymfony/FOSUserBundle\">FosUserBundle</a>, to allow better user login, registration, etc and <a href=\"http://symfony.com/doc/current/bundles/DoctrineFixturesBundle/index.html\">DoctrineFixturesBundle</a>, which allow to fill a database with fixtures based on our Doctrine entities.</p>\n<p>To load doctrine fixtures into database you need to execute the command line:</p>\n<pre class=\"prettyprint\">php app/console doctrine:fixtures:load</pre>\n<p>That means for each test you need to clean up the database and load the fixtures manually.</p>\n<blockquote><p>Our objective is the automate this process before executing each test.</p></blockquote>\n<h3>Doctrine fixtures and the creation of FOSUserBundle users</h3>\n<p>Because we are using Doctrine fixtures we need a class that implements <code>FixtureInterface</code> interface (see <a href=\"http://symfony.com/doc/current/bundles/DoctrineFixturesBundle/index.html#writing-simple-fixtures\">documentation</a>). The problem is we want to create FOSUserBundle user instances and that requires we have access to the container to get a reference to the user management service, so we need to set access to the container too. Nothing we can't find in the documentation:</p>\n<pre class=\"prettyprint\">use Doctrine\\Common\\DataFixtures\\FixtureInterface;\nuse Doctrine\\Common\\Persistence\\ObjectManager;\nuse Symfony\\Component\\DependencyInjection\\ContainerAwareInterface;\nuse Symfony\\Component\\DependencyInjection\\ContainerInterface;\n<p>class MyFixtures implements FixtureInterface, ContainerAwareInterface {</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">/**\n * @var ContainerInterface\n */\nprivate $container;\n\n/**\n * {@inheritDoc}\n */\npublic function setContainer(ContainerInterface $container = null) {\n    $this-&amp;gt;container = $container;\n}\n\npublic function load(ObjectManager $manager) {\n\n    $userManager = $this-&amp;gt;container-&amp;gt;get(&#39;fos_user.user_manager&#39;);\n\n    // Create a new user\n    $user = $userManager-&amp;gt;createUser();\n    $user-&amp;gt;setUsername(&#39;user&#39;);\n    $user-&amp;gt;setEmail(&#39;user@domain.com&#39;);\n    $user-&amp;gt;setPlainPassword(&#39;user_password&#39;);\n    $user-&amp;gt;setEnabled(true);\n\n    $manager-&amp;gt;persist($user);\n    $manager-&amp;gt;flush();&lt;/pre&gt;</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3>The test class</h3>\n<p>In your test class you need to define the <code>setUp</code> method that is responsible to prepare the database fixtures.<br />\nThe setup method makes two important things, first purge the tables on the database to remove any previous changes make by previous tests and, second, initialize the database with a set of fixtures.</p>\n<pre class=\"prettyprint\">class YourTestClass extends WebTestCase {\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">private $em;\n\n/**\n * Set up database and fixtures before each test\n */\npublic function setUp() {\n\n    $client = self::createClient();\n    $container = $client-&amp;gt;getKernel()-&amp;gt;getContainer();\n    $em = $container-&amp;gt;get(&#39;doctrine&#39;)-&amp;gt;getManager();\n\n    // Purge tables\n    $purger = new \\Doctrine\\Common\\DataFixtures\\Purger\\ORMPurger($em);\n    $executor = new \\Doctrine\\Common\\DataFixtures\\Executor\\ORMExecutor($em, $purger);\n    $executor-&amp;gt;purge();\n\n    // Load fixtures\n    $loader = new \\Doctrine\\Common\\DataFixtures\\Loader;\n    $fixtures = new \\Path\\To\\Your\\Fixtures\\MyFixtures();\n    $fixtures-&amp;gt;setContainer($container);\n    $loader-&amp;gt;addFixture($fixtures);\n    $executor-&amp;gt;execute($loader-&amp;gt;getFixtures());\n}\n\n...</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>}</pre></p>\n<p>Note how</p>\n<blockquote><p>we need to inject a reference to the container in the fixtures class.</p></blockquote>\n<p>It is necessary to make it by hand. The dependency isn't injected automatically because we are running a PHPUnit test, not a Symfony2 application.</p>","excerpt":"I have an application built with Symfony2 framework which uses the Doctrine2 ORM for persistence.\nThe issue is I need to make functional tests\nallowing to purge and initialize the database with doctrine fixtures. class MyFixtures implements FixtureInterface, ContainerAwareInterface { }","frontmatter":{"date":"17 October, 2013","title":"Symfony2, Doctrine, FOSUserBundle and fixtures for functional testing"},"fields":{"slug":"/blog/2013/10/17/symfony2-doctrine-fosuserbundle-and-fixtures-for-functional-testing/","readingTime":{"text":"2 min read"}}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/blog/2013/10/17/symfony2-doctrine-fosuserbundle-and-fixtures-for-functional-testing/"}}}