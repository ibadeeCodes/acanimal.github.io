{"version":3,"sources":["webpack:///./src/pages/blog.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["Content","Object","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","target","name","styles","ArticleDate","MarkerHeader","ReadingTime","IndexPage","_ref2","data","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_4__","_components_seo__WEBPACK_IMPORTED_MODULE_5__","title","allMarkdownRemark","edges","map","_ref3","node","key","id","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","frontmatter","path","css","_ref","date","fields","readingTime","text","excerpt","query","SEO","description","lang","meta","keywords","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_1__","metaDescription","siteMetadata","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","a","htmlAttributes","titleTemplate","content","property","author","concat","length","join","defaultProps","propTypes","PropTypes","string","array","arrayOf","isRequired","styled_base_browser_esm","NavLink","Link","NavOutLink","GitHubLink","HomeLink","SiteHeader","SiteTitle","SiteSubtitle","Header","siteTitle","siteSubtitle","core_browser_esm","href","GatsbyLink","Footer","Layout","children","gatsby_browser_entry","render","react_default","Fragment","header","subtitle","layout_Content","Date","getFullYear","_1034063513"],"mappings":"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","file":"component---src-pages-blog-js-da49bbc57fb8bca2a1b0.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport { css } from \"@emotion/core\"\nimport styled from \"@emotion/styled\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst Content = styled.div`\n  margin: 0 auto;\n  max-width: 860px;\n  padding: 1.45rem 1.0875rem;\n`\n\nconst ArticleDate = styled.h5`\n  display: inline;\n  color: #606060;\n  margin-bottom: 10px;\n`\n\nconst MarkerHeader = styled.h3`\n  display: inline;\n  border-radius: 1em 0 1em 0;\n  margin-bottom: 10px;\n  background-image: linear-gradient(\n    -100deg,\n    rgba(255, 250, 150, 0.15),\n    rgba(255, 250, 150, 0.8) 100%,\n    rgba(255, 250, 150, 0.25)\n  );\n`\n\nconst ReadingTime = styled.h5`\n  display: inline;\n  color: #606060;\n  margin-bottom: 10px;\n`\n\nconst IndexPage = ({ data }) => {\n  return (\n    <Layout>\n      <SEO title=\"Blog\" />\n      <Content>\n        <h1>Blog</h1>\n        {data.allMarkdownRemark.edges.map(({ node }) => (\n          <div key={node.id}>\n            <Link\n              to={node.frontmatter.path}\n              css={css`\n                text-decoration: none;\n                color: inherit;\n              `}\n            >\n              <MarkerHeader>{node.frontmatter.title} </MarkerHeader>\n              <div>\n                <ArticleDate>{node.frontmatter.date}</ArticleDate>\n                <ReadingTime> - {node.fields.readingTime.text}</ReadingTime>\n              </div>\n              <p>{node.excerpt}</p>\n            </Link>\n          </div>\n        ))}\n      </Content>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n\nexport const query = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n          }\n          fields {\n            slug\n            readingTime {\n              text\n            }\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import { Link } from \"gatsby\"\nimport styled from \"@emotion/styled\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\n\nconst Content = styled.div`\n  align-self: center;\n  max-width: 860px;\n  padding: 1rem 1.0875rem;\n  font-size: 1.2rem;\n  text-align: center;\n`\n\nconst NavLink = styled(Link)`\n  color: black;\n  margin-left: 15px;\n  text-decoration: none;\n  display: inline-block;\n  position: relative;\n  text-shadow: 1px 1px 1px #FFFFFF;\n\n  ::after {\n    content: \"\";\n    position: absolute;\n    width: 100%;\n    transform: scaleX(0);\n    height: 2px;\n    bottom: 0;\n    left: 0;\n    background-color: rgba(0, 0, 0, 0.8);\n    transform-origin: bottom right;\n    transition: transform 0.4s cubic-bezier(0.86, 0, 0.07, 1);\n  }\n\n  :hover::after {\n    transform: scaleX(1);\n    transform-origin: bottom left;\n  }\n`\n\nconst NavOutLink = styled.a`\n  color: black;\n  margin-left: 15px;\n  text-decoration: none;\n  display: inline-block;\n  position: relative;\n  text-shadow: 1px 1px 1px #FFFFFF;\n\n  ::after {\n    content: \"\";\n    position: absolute;\n    width: 100%;\n    transform: scaleX(0);\n    height: 2px;\n    bottom: 0;\n    left: 0;\n    background-color: rgba(0, 0, 0, 0.8);\n    transform-origin: bottom right;\n    transition: transform 0.4s cubic-bezier(0.86, 0, 0.07, 1);\n  }\n\n  :hover::after {\n    transform: scaleX(1);\n    transform-origin: bottom left;\n  }\n`\n\nconst GitHubLink = styled(NavOutLink)``\n\nconst HomeLink = styled(NavLink)`\n  margin-left: 0;\n`\n\nconst SiteHeader = styled.header`\n  display: flex;\n  flex-direction: column;\n  align-content: center;\n  justify-content: center;\n  background-color: #EEEEEE;\n  background-image: url(\"https://unsplash.it/1500/500?random&blur\");\n`\n\nconst SiteTitle = styled.h1`\n  font-size: 2.5rem;\n  margin-bottom: 0;\n  text-shadow: 1px 1px 1px #FFFFFF;\n`\n\nconst SiteSubtitle = styled.h3`\n  margin-top: 10px;\n  color: #606060;\n  text-shadow: 1px 1px 1px #FFFFFF;\n`\n\nconst Header = ({ siteTitle, siteSubtitle }) => (\n  <SiteHeader>\n    <Content>\n      <HomeLink to=\"/\">Home</HomeLink>\n      <NavLink to=\"/books\">Books</NavLink>\n      <NavLink to=\"/projects\">Projects</NavLink>\n      <NavLink to=\"/about\">About</NavLink>\n      <GitHubLink href=\"https://github.com/niklasmtj/gatsby-starter-julia\">GitHub</GitHubLink>\n    </Content>\n\n    <Content>\n      <SiteTitle>{siteTitle}</SiteTitle>\n      <SiteSubtitle>{siteSubtitle}</SiteSubtitle>\n    </Content>\n  </SiteHeader>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n  siteSubtitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: '',\n  siteSubtitle: '',\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport styled from \"@emotion/styled\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Content = styled.div`\n  margin: 0 auto;\n  max-width: 860px;\n  padding: 0 1.0875rem 1rem;\n  padding-top: 0;\n`\n\nconst GatsbyLink = styled.a`\n  margin-left: 5px;\n`\n\nconst Footer = styled.footer`\n  display: flex;\n  justify-content: center;\n  font-size: 0.7em;\n`\n\nconst Layout = ({ children, siteTitle, siteSubtitle }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title,\n            subtitle\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header\n          siteTitle={siteTitle || data.site.siteMetadata.title}\n          siteSubtitle={siteSubtitle || data.site.siteMetadata.subtitle}\n        />\n        <Content>\n          <main>{children}</main>\n          <Footer>\n            © {new Date().getFullYear()}, Built with\n            {` `}\n            <GatsbyLink href=\"https://www.gatsbyjs.org\">Gatsby</GatsbyLink>\n          </Footer>\n        </Content>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n  siteTitle: PropTypes.string,\n  siteSubtitle: PropTypes.string,\n}\n\nLayout.defaultProps = {\n  siteTitle: null,\n  siteSubtitle: null,\n}\n\nexport default Layout\n"],"sourceRoot":""}