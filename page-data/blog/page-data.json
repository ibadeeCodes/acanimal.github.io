{"componentChunkName":"component---src-templates-blog-list-js","path":"/blog","webpackCompilationHash":"024410ebbb7cbeb2ff5b","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"3c3aa555-904a-585d-ba97-14f3a51f0268","frontmatter":{"title":"How to update a column's type (in PostgreSQL)","date":"04 January, 2020","layout":"post"},"fields":{"slug":"/blog/2020/01/04/updating-column-type","readingTime":{"text":"2 min read"}},"excerpt":"So, you have a table and you need to modify a column's type. The problem arise when the column is filled and the type change is incompatible, for example, from string to integer, so how we can update the type and recompute the filled values to the new type? Don't worry, SQL is powerful enough to let you make the change in one sentence with ."}},{"node":{"id":"79af3b04-7c6e-5eca-bdb0-d4e4aadfb60b","frontmatter":{"title":"Working with query params in JavaScript","date":"09 November, 2019","layout":"post"},"fields":{"slug":"/blog/2019/11/09/urlsearchparams","readingTime":{"text":"2 min read"}},"excerpt":"No matter if you work with JavaScript at client or server side, at some point you'll need to work with urls and its query params. As example, I'm currently using react-router in my project, which is an great tool. I can define dynamic routes with path params and easily react-router returns me these params within the  variable and the rest of url information in the  variable, but how can I easily access to query params? There are great libraries for this purpose -like query-string or qs- but the question is: why increase in some more bytes the size of your package when there is a native solution? ðŸ˜„ The ."}},{"node":{"id":"8896a095-5d6d-5109-9965-863da1b7fc56","frontmatter":{"title":"How I migrated my site from Jekyll to Gatsby","date":"03 October, 2019","layout":"post"},"fields":{"slug":"/blog/2019/10/03/from-jekyll-to-gatsby","readingTime":{"text":"9 min read"}},"excerpt":"I think it was a matter of time to make this change. Jekyll was one of the first static site generates and it's awesome but for me, as a JavaScript developer that know little about ruby language, has more sense to stay close JS world. I heard about Gatsby some time ago but never spent enough time to get a good ideas about its philosophy and capabilities. Finally this weekend I decided to make the change. What I found is while Jekyll is extremely good doing one thing --mainly focused on blogs--, Gatsby is a more general solution that can be good for many other things and not only a blog. This post is about my experience in the migration process and how I implemented some features."}},{"node":{"id":"234acf40-fbcb-5207-8b78-f82fe791b118","frontmatter":{"title":"Express API with autogenerated OpenAPI doc through Swagger","date":"20 October, 2018","layout":"post"},"fields":{"slug":"/blog/2018/10/20/express-swagger-doc","readingTime":{"text":"3 min read"}},"excerpt":"In past years OpenAPI has arise as the preferred way to document APIs. In this article we will see how easy is document an API created with NodeJS and Express through the Swagger tools. If you are working in an REST API you more probably will desire to have some API doc where your users could find what are the endpoints of your API, what they do, which parameters they accept and which output they generate."}},{"node":{"id":"265eb0d3-810b-5b53-8418-6e34f5760c5d","frontmatter":{"title":"Joppy, the Tinder for tech recruitment","date":"28 June, 2018","layout":"post"},"fields":{"slug":"/blog/2018/06/30/joppy","readingTime":{"text":"6 min read"}},"excerpt":"TLTR: This post is about Joppy, a new service I'm working on that tries to eliminate the pain currently exists in the communication among recruiters and tech professionals. Let me describe you the current scenario in the recruitment world and, please, any feedback will be welcome. Tech professionals: Wherever I wrote tech professionals I mean any kind of role related with tech companies: software engineers, developers or programmers, manager, product owners, QA, designers, ... It all starts... ...taken a beer and asking your friends: How many connection requests do you receive per week from LinkedIn? All three (two developers and a UI/UX designer) answer the same enough to be annoying. Every tech professional want to have his/her CV updated in LinkedIn, it is a great service, but no one agrees with the myriad of emails asking for connections from recruiters that has awesome job offers from awesome companies. Do you think the job of a recruiter is easy? Well, let me say you are completely wrong. It is not an easy job and often ungrateful. If you think in a more or less important city with many tech companies you can image the competition existing among companies to get tech professional. Currently there are two main things recruiters can do to arrive to candidates: Publish offers in some kind of board and wait candidates applies (we all have in mind web sites that crawls and shows tons of job offers) Make an active search of potential candidates. Recruiters need to use services like LinkedIn, where they can search techies in a given geographical area, that know about X, Y, Z skills and many other options. Once filtered they need to contact each of them where, probably, most of them are not interested in a change or in the position the recruiter is offering."}},{"node":{"id":"f4f8d5a6-446c-5001-8dff-91d437e10c56","frontmatter":{"title":"Using async/await in ExpressJS middlewares","date":"15 February, 2018","layout":"post"},"fields":{"slug":"/blog/2018/03/15/express-async-middleware","readingTime":{"text":"5 min read"}},"excerpt":"If you are not living in a cave for the past year you'll probably know the  keywords are one of the most interesting additions on ES7. It merges the benefits of a sequential syntax with the power of asynchronous programming. In this post we will cover how we must use correctly async functions as express middleware."}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"limit":6,"skip":0,"numPages":18,"currentPage":1}}}