{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/2019/11/09/urlsearchparams/","webpackCompilationHash":"79efcce55e01ed481a07","result":{"data":{"markdownRemark":{"html":"<p>No matter if you work with JavaScript at client or server side, at some point you'll need to work with urls and its query params.</p>\n<p>As example, I'm currently using <a href=\"https://reacttraining.com/react-router/web\">react-router</a> in my project, which is an great tool. I can define dynamic routes with path params and easily react-router returns me these params within the <code class=\"language-text\">match</code> variable and the rest of url information in the <code class=\"language-text\">location</code> variable, but how can I easily access to query params?</p>\n<p>There are great libraries for this purpose -like <a href=\"https://www.npmjs.com/package/query-string\">query-string</a> or <a href=\"https://www.npmjs.com/package/qs\">qs</a>- but the question is: <strong>why increase in some more bytes the size of your package when there is a native solution?</strong> ðŸ˜„ The <code class=\"language-text\">URLSearchParams</code>.</p>\n<!--more-->\n<h3>Detect feature support</h3>\n<p>As all native implementation remember the support depends on the browser version. See compatibilities <a href=\"https://caniuse.com/#search=URLSearchParams\">here</a>. We can check it with:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span><span class=\"token string\">'URLSearchParams'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Support :)</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<h3>Construct an instance</h3>\n<p>The most typical usage is to build an <code class=\"language-text\">URLSearchParams</code> instance from a query string. Note it is also valid to pass a string that start with <code class=\"language-text\">?</code>, the <code class=\"language-text\">URLSearchParams</code> will strip it out:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> params <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">URLSearchParams</span><span class=\"token punctuation\">(</span><span class=\"token string\">'version=1&amp;name=john&amp;lastname=nieve'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// or</span>\n<span class=\"token keyword\">const</span> params <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">URLSearchParams</span><span class=\"token punctuation\">(</span><span class=\"token string\">'?version=1&amp;name=john&amp;lastname=nieve'</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<blockquote>\n<p>ðŸ¤“ Be aware to not pass string url! Or it will be interpreted as the parameter name. For example, given:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> params <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">URLSearchParams</span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://some_api.com?paramA=valueA'</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>You'll get the three parameters named: <code class=\"language-text\">https://some_api.com?paramA</code> with value <code class=\"language-text\">valueA</code>.</p>\n</blockquote>\n<h3>Working with params</h3>\n<p>Once we have an instance it is easy to get or set the parameters values:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\">params<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'version'</span><span class=\"token punctuation\">)</span>           <span class=\"token comment\">// 1</span>\nparams<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">)</span>              <span class=\"token comment\">// john</span>\nparams<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">)</span>              <span class=\"token comment\">// john</span>\n\nparams<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'lastname'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'stark'</span><span class=\"token punctuation\">)</span>\nparams<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'lastname'</span><span class=\"token punctuation\">)</span>          <span class=\"token comment\">// stark</span>\n\nparams<span class=\"token punctuation\">.</span><span class=\"token function\">has</span><span class=\"token punctuation\">(</span><span class=\"token string\">'lastname'</span><span class=\"token punctuation\">)</span>          <span class=\"token comment\">// true</span>\nparams<span class=\"token punctuation\">.</span><span class=\"token function\">has</span><span class=\"token punctuation\">(</span><span class=\"token string\">'age'</span><span class=\"token punctuation\">)</span>               <span class=\"token comment\">// false</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>We can also add new parameters and work with array parameters:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\">params<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'tags'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'bastard'</span><span class=\"token punctuation\">)</span>\nparams<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">'tags'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'lord'</span><span class=\"token punctuation\">)</span>\n\nparams<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'tags'</span><span class=\"token punctuation\">)</span>              <span class=\"token comment\">// bastard</span>\nparams<span class=\"token punctuation\">.</span><span class=\"token function\">getAll</span><span class=\"token punctuation\">(</span><span class=\"token string\">'tags'</span><span class=\"token punctuation\">)</span>           <span class=\"token comment\">// ['bastard', 'lord']</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<blockquote>\n<p>Note the difference between <code class=\"language-text\">get</code> and <code class=\"language-text\">getAll</code> when working with array parameters.</p>\n</blockquote>\n<p>Or simply delete params:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\">params<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token string\">'lastname'</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>Finally we can convert the <code class=\"language-text\">URLSearchParams</code> back into a string with the:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\">params<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>               <span class=\"token comment\">// version=1&amp;name=john&amp;tags=bastard&amp;tags=lord</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<h3>Working with URLs</h3>\n<p>If we have an URL string the easy way to get the params is using the <code class=\"language-text\">URL</code> object:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> url <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">URL</span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://got-api.com?version=1&amp;name=john&amp;lastname=nieve'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> params <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">URLSearchParams</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nparams<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\">// version=1&amp;name=john&amp;lastname=nieve</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>","excerpt":"No matter if you work with JavaScript at client or server side, at some point you'll need to work with urls and its query params. As example, I'm currently using react-router in my project, which is an great tool. I can define dynamic routes with path params and easily react-router returns me these params within the  variable and the rest of url information in the  variable, but how can I easily access to query params? There are great libraries for this purpose -like query-string or qs- but the question is: why increase in some more bytes the size of your package when there is a native solution? ðŸ˜„ The .","frontmatter":{"date":"09 November, 2019","title":"Working with query params in JavaScript"},"fields":{"slug":"/blog/2019/11/09/urlsearchparams/","readingTime":{"text":"2 min read"}}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/blog/2019/11/09/urlsearchparams/"}}}